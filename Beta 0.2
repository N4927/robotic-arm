#comand to run on terminal before begin sudo pigpiod
from gpiozero import Servo
from gpiozero import DistanceSensor
import time
import math
import cv2
import numpy as np
from gpiozero.pins.pigpio import PiGPIOFactory


import pygame
pygame.init()

factory= PiGPIOFactory()
servo1_pin = 27
servo2_pin = 12
servo3_pin = 24
servo4_pin = 25
servo5_pin = 8

servo1 = Servo(servo1_pin, pin_factory=factory)
servo2 = Servo(servo2_pin, pin_factory=factory)
servo3 = Servo(servo3_pin, pin_factory=factory)
servo4 = Servo(servo4_pin, pin_factory=factory)
servo5 = Servo(servo5_pin, pin_factory=factory)
speed = 2

echo_pin = 7
trig_pin = 23


sensor = DistanceSensor( echo = 7, trigger = 23,pin_factory = factory)

def tastiera():

    b = 440
    c = 100
    d = 200
    e = 150
    f = 150

    servo1.value= math.sin(math.radians(b))
    servo2.value= math.sin(math.radians(c))
    servo3.value= math.sin(math.radians(d))
    servo4.value= math.sin(math.radians(e))
    servo5.value= math.sin(math.radians(f))
    #variabile per la scelta del motore
    stato = 1
    win = pygame.display.set_mode((1,1))

    keep = True
    run = True

    speed = 1

    run = True
    while run:
        pygame.time.delay(10)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    stato = 1
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_2:
                    stato = 2
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_3:
                    stato = 3
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_4:
                    stato = 4
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_5:
                    stato = 5



        keys = pygame.key.get_pressed()

        if stato == 1:
            if keys[pygame.K_LEFT]:
               b += speed
               if b > 440 :
                   b = 440

            if keys[pygame.K_RIGHT]:
               b -= speed
               if b < 290:
                  b = 290

        if stato == 2:
            if keys[pygame.K_LEFT]:
               c += speed
               if c > 180:
                  c = 180

            if keys[pygame.K_RIGHT]:
               c -= speed

               if c < 85:
                  c = 85

        if stato == 3:
            if keys[pygame.K_LEFT]:
               d += speed
               if d > 360:
                  d = 360

            if keys[pygame.K_RIGHT]:
               d -= speed
               if d < 0:
                    d = 0

        if stato == 4:
            if keys[pygame.K_LEFT]:
               f -= speed
               e += speed
               if e > 185:
                  e = 185
               if f < 115:
                  f =115

            if keys[pygame.K_RIGHT]:
               f += speed
               e -=speed
               if e < 105:
                  e = 105
               if f > 185:
                  f = 185


        if stato == 1:
            print(b)

        if stato == 2:
            print(c)
        if stato == 3:
            print(d)
        if stato == 4:
            print(e)
            print("-------")
            print(f)
        if stato == 5:
            time.sleep(1)
            distance = clean()
        win.fill((0,0,0))
        pygame.display.update()

        servo1.value= math.sin(math.radians(b))
        servo2.value= math.sin(math.radians(c))
        servo3.value= math.sin(math.radians(d))
        servo4.value= math.sin(math.radians(e))
        servo5.value= math.sin(math.radians(f))

    pygame.quit()

def clean():
    distance = round((sensor.distance* 100), 2)
    print('Distance: ', distance, "cm")
    time.sleep(0.01)
    return distance


def movement():
# set servo motor position
    e = 150
    f = 150
    b = 430
    c = 100
    d = 200
    keep = True
    alpha = 0
    beta = 0
    omega = 0
    arm1Lenght = 25
    arm2Lenght = 32.5
    servo2.value= math.sin(math.radians(c))
    servo3.value= math.sin(math.radians(d))
    servo4.value= math.sin(math.radians(e))
    servo5.value= math.sin(math.radians(f))
    time.sleep(1)

    while keep:


        # recive distance value from the other funcion

        distance = clean()

        #if the distance is bigger than 20 cm the motor continue to turn
        if distance >= 20:
            b += 0.4
            servo1.value= math.sin(math.radians(b))


# if not it stop
        if distance < 20:
            b = b
            servo1.value= math.sin(math.radians(b))
            time.sleep(0.1)
            distance1 = clean()
            time.sleep(0.1)
            distance1 = clean()
            time.sleep(0.4)
            distance1 = clean()
            time.sleep(0.4)
            distance1 = clean()



            keep = False
    distance1 = distance1 +3
    alpha = math.acos((distance1**2+ arm1Lenght**2 -arm2Lenght**2)/(2*distance1*arm2Lenght))
    beta = math.acos((arm2Lenght**2+ arm1Lenght**2 -distance1**2)/(2*arm1Lenght*arm2Lenght))
    print(alpha)
    print(beta)
    print(math.degrees(alpha))
    print(beta)
    print(math.radians(360-math.degrees(alpha)))
    print(math.degrees(beta))

    servo2.value= math.sin(360 -math.radians(math.degrees(alpha)))
    servo3.value= math.sin(math.radians(155 +math.degrees(beta)))

    time.sleep(0.5)
    f = 185
    e = 106
    servo4.value= math.sin(math.radians(e))
    servo5.value= math.sin(math.radians(f))
    time.sleep(1.5)

    b = 430
    c = 100
    d = 200



#reset base motor cordinate
    servo2.value= math.sin(math.radians(c))
    time.sleep(0.2)
    servo3.value= math.sin(math.radians(d))
    time.sleep(1.5)
    servo1.value= math.sin(math.radians(450))

def web():
    b = 430
    c = 100
    d = 200
    e = 150
    f = 150
    print("ciao")
    dati = open('/usr/lib/cgi-bin/dati.txt','w')
    dati.write("%s\n" % str(b))
    dati.write("%s\n" % str(c))
    dati.write("%s\n" % str(d))
    dati.write("%s\n" % str(e))
    dati.write("%s\n" % str(f))

    dati.close()
    ip = '172.20.10.3'
    print("for control the arm from remoto go to ",ip, "from your device" )

def hand():
	a = 100
	b = 100
	xPrev = 200
	yPrev = 150
	cap = cv2.VideoCapture(0)
	while True:
		_, frame = cap.read()
		hsv_frame = cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
		low_green = np.array([45, 100,115])
		high_green = np.array([102, 255,255])
		green_mask = cv2.inRange(hsv_frame,low_green, high_green)
		cv2.imshow("Frame", frame)
		cv2.imshow("Red", mask)
		point = cv2.findNonZero(green_mask)
		avg = np.mean(point, axis=0)
		Avg2D = np.array(avg)
		Avg1D = Avg2D[0]
		Avg1D_string = str(Avg1D)
		newstring = ''.join([i for i inAvg1D_string if i.isdigit()])
		xString = newstring[:len(newstring) // 2]
		yString = newstring[len(newstring) // 2:]
		x = int(xString[:3])
		y = int(yString[:3]
		if x > xPrev:
			a += 1
			xPrev = x
		elif x < xPrev:
			a -= 1
			xPrev = x
		if y > yPrev:
			b += 1
			yPrev = y
		elif y < yPrev:
			b -= 1
			yPrev = y
		key = cv2.waitKey(1)
 
		
		
		
		
		
b = 430
c = 100
d = 200
e = 150
f = 150
servo1.value= math.sin(math.radians(b))
servo2.value= math.sin(math.radians(c))
servo3.value= math.sin(math.radians(d))
servo4.value= math.sin(math.radians(e))
servo5.value= math.sin(math.radians(f))
"""fabio = int(input("select your modality \n 1: move with keyboard \n 2: self taking \n 3: web control \n "))
if fabio == 1:
   tastiera()
if fabio == 2:
    movement()
if fabio == 3:
    web()"""

movement()
